#compdef -P -value-,BENCHMARK_*,-default-

# Copyright (C) 2018  CERN for the benefit of the LHCb collaboration
# Author: Paul Seyfert <pseyfert@cern.ch>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# In applying this licence, CERN does not waive the privileges and immunities
# granted to it by virtue of its status as an Intergovernmental Organization
# or submit itself to any jurisdiction.

if [[ "$service" = -value-* ]]; then
  case ${${service#-value-,BENCHMARK_}/,*} in
    BENCHMARK_LIST_TESTS) ;&
    BENCHMARK_COUNTERS_TABULAR) ;&
    BENCHMARK_REPORT_AGGREGATES_ONLY) ;&
    BENCHMARK_DISPLAY_AGGREGATES_ONLY)
      local -a benchmark_booleans; benchmark_booleans=('true' 'false')
      _describe -t benchmark_booleans 'boolean' benchmark_booleans
      ;;
    BENCHMARK_FILTER)
      _message 'regex'
      ;;
    BENCHMARK_MIN_TIME)
      _message 'minimum times'
      ;;
    BENCHMARK_REPETITIONS)
      _message 'number'
      ;;
    BENCHMARK_FORMAT) ;&
    BENCHMARK_OUT_FORMAT)
      local -a benchmark_formats; benchmark_formats=('console' 'json' 'csv')
      _describe -t benchmark_formats 'format' benchmark_formats
      ;;
    BENCHMARK_OUT)
      _path_files
      ;;
    BENCHMARK_COLOR)
      local -a boolorauto; boolorauto=('true' 'false')
      _describe -t boolorauto 'boolean or auto' boolorauto
      ;;
    V)
      local -a verbosities; verbosities=(0 1 2 3)
      _describe -t verbosities 'verbosity' verbosities
      ;;
  esac
  return
fi

_arguments \
  "--benchmark_list_tests=-:bool:(true false)" \
  "--benchmark_filter=-:regex: _message 'regex'" \
  "--benchmark_min_time=-:mintime: _message 'minimum times'" \
  "--benchmark_repetitions=-:repcount: _message 'number'" \
  "--benchmark_report_aggregates_only=-:bool:(true false)" \
  "--benchmark_display_aggregates_only=-:bool:(true false)" \
  "--benchmark_format=-:format:(console json csv)" \
  "--benchmark_out=-:outfile:_path_files" \
  "--benchmark_out_format=-:format:(console json csv)" \
  "--benchmark_color=-:bool or auto:(auto true false)" \
  "--benchmark_counters_tabular=-:bool:(true false)" \
  "--v=-:verbosity:(0 1 2 3)"
